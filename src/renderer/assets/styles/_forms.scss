@import '_variables';

button {
  &.null {
    background: transparent;
    border: none;
    margin: 0;
    padding: 0;
  }

  &:disabled {
    opacity: .5;
    pointer-events: none;
  }
}

label, .field .header {
  display: block;
  font-family: $font_header;
  font-size: 1.6rem;
  letter-spacing: .01rem;
  padding-bottom: .5rem;
}

input, textarea, select {
  background-color: transparent;
  border: none;
  color: $input_color;
  font: $input_font;
  height: $input_height;
  letter-spacing: $input_letter_spacing;
  margin: 0;
  padding: $input_padding;
  text-align: left;
}

//
// Fields
//
.field {
  margin: $input_spacing;
  position: relative;
  text-align: left;

  &.textarea, &.text, &.email, &.password {
    label {
      pointer-events: none;
    }
  }

  &.group {
    margin-top: 1.5rem;

    .header {
      display: block;
      font-size: 1.2rem;
      padding: 0 0 .5rem 1rem;
    }

    .options {
      width: fit-content;
    }

    label {
      background-color: $input_background;
      color: $input_color;
      cursor: pointer;
      display: inline-block;
      font: $input_font;
      margin: 0;
      padding: 1.2rem 1.5rem;
      transition: .3s;

      input {
        display: none;
      }

      &:hover {
        background-color: transparentize(color(primary, 500), .9);
      }

      &.active {
        background-color: color(primary, 500);
        color: #fff;
      }
    }
  }

  &.toggle {
    @extend label;
    height: 2.6rem;
    margin: 1rem 0;
    padding: .4rem 0 0 7rem;
    position: relative;

    input {
      height: 0;
      opacity: 0;
      width: 0;
    }

    .slider {
      background-color: color(neutral, 500);
      border-radius: 1.3rem;
      height: 2.6rem;
      position: absolute;
      cursor: pointer;
      top: 0;
      left: 0;
      width: 5rem;
      transition: .4s;
    }

    .slider:before {
      background-color: color(neutral, 100);
      border-radius: 100%;
      bottom: .2rem;
      box-shadow: inset 0 2px 5px #fff;
      content: ' ';
      height: 2.4rem;
      left: .1rem;
      position: absolute;
      top: .1rem;
      transition: .4s;
      width: 2.4rem;
    }

    input:checked + .slider {
      background-color: color(primary, 500);

      &:before {
        left: 2.5rem;
      }
    }

    input:focus + .slider {
      box-shadow: 0 0 1px color(primary, 500);
    }
  }

  &.select {
    svg {
      fill: darken($input_background, 30%);
      position: absolute;
      right: 1rem;
      top: 1rem;
      width: 2rem;
    }

    select {
      cursor: pointer;
    }

    &:hover {
      svg {
        fill: color(neutral, 500);
      }
    }
  }

  input[type="text"], input[type="email"], input[type="password"], textarea, select {
    -webkit-appearance: none;
    background-color: $input_background;
    border-bottom: $input_border_bottom;
    border-radius: 0;
    height: 4rem;
    margin: 0;
    width: 100%;

    ~ span {
      border-top: 2px solid lighten(color(neutral, 500), 30%);
      bottom: 0;
      display: block;
      height: 0px;
      margin: 0;
      padding: 0;
      position: absolute;
      transition: width 0.4s ease;
      white-space: nowrap;
      width: 0;
    }

    &:focus ~ span {
      border-color: color(neutral, 500);
      width: 100%;
    }

    &:focus + label, &:valid + label {
      bottom: 100%;
      font-size: 1.2rem;
    }

    &:valid ~ span {
      border-color: color(primary, 500);
      width: 100%;
    }

    &:invalid ~ span {
      border-color: color(red, 500);
      color: color(red, 500);
    }

    + label {
      left: 1rem;
      position: absolute;
      bottom: .8rem;
      transition: font-size 0.2s ease, bottom 0.2s ease;
      z-index: 1;
    }
  }

  &.valid {
    input[type="text"] ~ span, input[type="email"] ~ span, input[type="password"] ~ span, textarea ~ span, select ~ span {
      border-color: color(primary, 500);
      width: 100%;
    }
  }

  &.invalid {
    input[type="text"] ~ span, input[type="email"] ~ span, input[type="password"] ~ span, textarea ~ span, select ~ span {
      border-color: color(red, 500);
      color: color(red, 500);
    }
  }

  &.not-empty {
    input[type="text"] + label, input[type="email"] + label, input[type="password"] + label, textarea + label, select + label {
      bottom: 100%;
      font-size: 1.2rem;
    }
  }

  textarea {
    transition: height .2s ease;

    &:focus, &:valid {
      height: 10rem;
    }

    ~ span {
      bottom: 2px;
    }

    + label {
      bottom: .8rem;
    }
  }

  &.radio {
    display: inline-block;
    text-align: center;
    margin-top: 2rem;

    span {
      color: color(neutral, 500);
      font-size: 1.2rem;
      display: block;
      padding: .5rem 2rem 1rem 3rem;
    }

    input {
      box-sizing: border-box;
      display: block;
      height: 20px;
      position: absolute;
      width: 100%;

      &::after {
        background: color(primary, 500);
        border: 4px solid color(primary, 500);
        border-radius: 100%;
        color: rgba(0, 0, 0, 0.5);
        content: ' ';
        display: block;
        height: 12px;
        text-align: center;
        transition: background-color 0.2s ease;
        width: 12px;
      }

      &:hover {
        ~ span {
          color: darken(color(neutral, 500), 15%);
          cursor: pointer;
        }

        &::after {
          background: darken(color(primary, 500), 10%);
        }
      }
    }

    input:checked {
      &::after {
        background: color(primary, 500);
        border-color: lighten(color(neutral, 500), 30%);
        content: ' ';
      }
    }
  }
}


.input.checkbox {
  display: inline-block;
  height: 20px;
  position: relative;

  input {
    box-sizing: border-box;
    cursor: pointer;
    display: block;
    height: 25px;
    width: 25px;

    &::after {
      background: darken(color(neutral, 200), 5%);
      border: 5px solid darken(color(neutral, 200), 5%);
      border-radius: 1px;
      color: rgba(0, 0, 0, 0.5);
      content: ' ';
      display: block;
      height: 15px;
      text-align: center;
      transition: background-color 0.2s ease;
      width: 15px;
    }

    &:hover {
      ~ span {
        color: darken(color(neutral, 500), 15%);
        cursor: pointer;
      }

      &::after {
        background: darken(color(neutral, 200), 10%);
      }
    }
  }

  input:checked {
    &::after {
      background: color(teal, 500);
      border-color: lighten(color(neutral, 500), 30%);
      box-shadow: inset 0 4px 9px rgba(255, 255, 255, 0.2);
      content: ' ';
    }
  }
}

@mixin button-color($name, $color) {
  &.#{$name} {
    background: $color;
    color: #fff;

    &:hover {
      background: darken($color, 10%);
      color: #fff;
    }

    &.basic {
      background: transparent;
      border: 1px solid;
      color: $color;

      &:hover {
        background: $color;
        border-color: $color;
        color: #fff;
      }

      &:active {
        box-shadow: inset 0 0 3px darken($color, 35%);
      }
    }
  }
}

.button {
  background: #fff;
  border: none;
  border-radius: 4px;
  color: color(neutral, 500);
  cursor: pointer;
  font: 400 1.5rem $font_condensed;
  letter-spacing: .05rem;
  padding: 1rem 3rem;
  position: relative;
  text-transform: uppercase;
  transition: all .2s;
  width: fit-content;

  &:hover {
    background: #eee;
  }

  &.micro {
    padding: .5rem 1rem;
    font-size: 1.2rem;
  }

  &.small {
    padding: .8rem 1.6rem;
    font-size: 1.4rem;
  }

  &.large {
    display: block;
    margin-top: 2.5rem;
    padding: 2rem 5rem;
  }

  .icon {
    float: left;
    width: 2rem;
  }

  .loading.icon {
    display: none;
  }

  &.loading .loading.icon {
    animation-name: spin;
    animation-duration: 4000ms;
    animation-iteration-count: infinite;
    animation-timing-function: linear;
    display: block;
    position: absolute;
    left: .8rem;
    top: .9rem;
  }

  .text {
    float: right;
    padding: 0 .25rem;
  }

  @include button-color(brown, color(neutral, 500))
  @include button-color(teal, color(teal, 500))
  @include button-color(yellow, color(yellow, 500))
  @include button-color(green, color(green, 500))
  @include button-color(blue, color(blue, 500))
  @include button-color(red, color(red, 500))
}

/**
 * EDITOR
 */
.editor {
  align-items: stretch;
  display: flex;
  flex-direction: column;
  height: 100%;
  position: relative;

  .tabs {
    margin: 0;
  }

  .header {
    display: none;
  }

  textarea {
    background-color: $input_background;
    flex: 1;
  }
}


// React RTE overrides
.rich-text {
  align-items: stretch;
  background: $input_background;
  border-bottom: $input_border_bottom;
  border-radius: 0;
  border: none;
  display: flex;
  flex: 1;
  flex-direction: column;
}

.rich-text-toolbar {
  background: #f7f7f6;
  border: none;
  margin: 0;
  padding: .8rem .8rem .3rem;
}

.rich-text-editor {
  background: $input_background;
  border-radius: 0;
  color: $input_color;
  flex: 1;
  font: $input_font;
  height: 100%;
  letter-spacing: $input_letter_spacing;
}

.DraftEditor-root {
  height: 100%;
}
